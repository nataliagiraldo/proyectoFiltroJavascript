import { runAsync, getInfoAsync, editInfoAsync } from '/api/api.js';

class EditarPersona extends HTMLElement {
    constructor() {
        super();

    }

    connectedCallback() {
        this.infoItems();
    }

    async infoItems() {

        let url = `http://localhost:3000/personas`;
        let data = await runAsync(url);
        let container = this;
        let id;

        const renderData = (items) => {
            // Clear existing content
            container.innerHTML = '';

            const form = document.createElement('form');
            form.id = 'searchForm';
            form.action = '';

            const input = document.createElement('input');
            input.type = 'text';
            input.id = 'searchInput';
            input.name = 'searchInput';
            input.placeholder = 'Escribe tu bÃºsqueda';
            input.style.marginTop = '30px';
            input.style.padding = '8px';
            input.style.marginRight = '8px';
            input.style.border = '1px solid #ccc';
            input.style.borderRadius = '5px';

            const button = document.createElement('button');
            button.type = 'submit';
            button.textContent = 'Buscar';
            button.style.padding = '8px 16px';
            button.style.border = '1px solid #007bff';
            button.style.borderRadius = '5px';
            button.style.backgroundColor = '#007bff';
            button.style.color = '#fff';

            // Estilos para el contenedor container
            container.classList.add('scroll');
            container.style.display = 'flex';
            container.style.flexDirection = 'column';
            container.style.alignItems = 'center';
            container.style.borderRadius = '20px';
            container.style.gap = '30px'
            container.style.backgroundColor = 'darkblue';

            form.appendChild(input);
            form.appendChild(button);
            container.appendChild(form);

            items.forEach(item => {
                if ('nombre' in item) {
                    const formItem = document.createElement('form');

                    formItem.innerHTML = /*html*/ `
                        
                    <style>


                    .scroll {
                        overflow-y: auto; 
                    }
    
                    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');
                   
    
                    .container {
                        gap: 30px;
                        background: none;
                        flex-direction: column;
                        display: flex;
                        justify-content: center;
                        align-items: center;
                        padding: 20px;
                        width: 40vw;
                        }
    
                        .container h2{
                            font-size: 40px;
                            width: 100%;
                            display: flex;
                            justify-content: center;
                            color: white;
                    }
    
                        .input-field input[type="text"]{
                            width: 15vw; 
                            height: 3vh; 
                        }
                        
                        .container .heading {
                            font-size: 1.3rem;
                            margin-bottom: 20px;
                            font-weight: bolder;
                        }
                        
                    
                        .container .btn-container {
                            width: 100%;
                            height: 10vh;
                            display: flex;
                            align-items: center;
                            justify-content: center;
                            gap: 20px;
                        }
                        
                        .container .btn {
                            padding: 5px 20px;
                            font-size: 1rem;
                            text-transform: uppercase;
                            letter-spacing: 3px;
                            border-radius: 10px;
                            border: solid 1px #1034aa;
                            border-bottom: solid 1px #90c2ff;
                            background: linear-gradient(135deg, #0034de, #006eff);;
                            color: #fff;
                            font-weight: bolder;
                            width: 50%;
                            height: 5vh;
                            transition: all 0.2s ease;
                            box-shadow: 0px 2px 3px #000d3848, inset 0px 4px 5px #0070f0,
                                inset 0px -4px 5px #002cbb;
                        }
                        
                        .container .btn:active {
                            box-shadow: inset 0px 4px 5px #0070f0, inset 0px -4px 5px #002cbb;
                            transform: scale(0.995);
                        }
                        
                        .input-field {
                            display: flex;
                            justify-content: center;
                            position: relative;
                        }
                        
                        .input-field label {
                            position: absolute;
                            color: #000000;
                            pointer-events: none;
                            background-color: transparent;
                            left: 15px;
                            transform: translateY(0.6rem);
                            transition: all 0.3s ease;
                        }
                        
                        .input-field input {
                            padding: 10px 15px;
                            font-size: 1rem;
                            border-radius: 8px;
                            border: solid 1px #8d8d8d;
                            letter-spacing: 1px;
                            width: 100%;
                        }
                        
                        .input-field input:focus,
                        .input-field input:valid {
                            outline: none;
                            border: solid 1px #0034de;
                        }
                        
                        .input-field input:focus ~ label,
                        .input-field input:valid ~ label {
                            transform: translateY(-51%) translateX(-10px) scale(0.8);
                            background-color: #fff;
                            padding: 0px 5px;
                            color: #0034de;
                            font-weight: bold;
                            letter-spacing: 1px;
                            border: none;
                            border-radius: 100px;
                        }
                        
                        .container .passicon {
                            cursor: pointer;
                            font-size: 1.3rem;
                            position: absolute;
                            top: 6px;
                            right: 8px;
                        }
                        
                        .container .close {
                            display: none;
                        }
                        
                        .tipoPersonaId{
                            font-size: 1rem;
                        }
    
                        select{
                            border-radius: 10px;
                            width: 17vw;
                            height: 4vh; 
                        }
    
                        @media(max-width: 760px){
    
                            .container {
                                width: 90%;
                                height: 90vh;
                            }
    
                            .input-field input[type="text"],
                            .input-field select {
                                width: 90%;
                            }
                            
                            .container {
                                width: 90%;
                                height: 100%;
                            }
    
                            
                            .container .btn {
                                width: 50%;
                                height: 5vh;
                            }
                        }
                    </style>
    
                    <div class="container">
                        <form class="form">
                            <h2 class="formatoH2">Editar</h2>
    
                            <h2>Id:${item.id} </h2>
    
                            <div class="input-field">
                                <input
                                required=""
                                autocomplete="off"
                                type="text"
                                name="nombre"
                                id="nombre${item.nombre}"
                                class="nombre"
                                value="${item.nombre}"
                                />
                                <label for="nombre">Nombre:</label>
                            </div>
                            
                            <div class="input-field">
                                <input
                                required=""
                                autocomplete="off"
                                type="text"
                                name="email"
                                id="email${item.email}"
                                class="email"
                                value="${item.email}"
                                />
                                <label for="email">email</label>
                            </div>
            
    
                            <select for="marcaId${item.tipoPersonaId}"  class="tipoPersonaId" id="marcaId${item.tipoPersonaId}">
                                <option value="" > Tipo de persona: </option>
                                <option value="${item.tipoPersonaId}" >${item.tipoPersonaId}</option>
                            </select>
    
                        
                            <div class="btn-container">
                                <button class="btn" id="button${item.id}" type="button">enviar</button>
                            </div>
                        </form>
                    </div>`;

                    container.appendChild(formItem);
                    function crearOpciones(dicc) {
                        // Selecciona el elemento select
                        let selectElement = document.getElementById(`tipoPersona${item.id}`);

                        // Crea y aÃ±ade las nuevas opciones
                        for (let i = 0; i < dicc.length; i++) {
                            let option = document.createElement('option');
                            option.value = dicc[i].id;
                            option.text = dicc[i].id + ": " + dicc[i].nombre;
                            selectElement.add(option);
                        }
                    }

                    async function cargarDatos() {
                        try {
                            const data = await runAsync('http://localhost:3000/tipoPersonas');
                            crearOpciones(data);
                        } catch (error) {
                            console.log('Error al cargar datos:', error);
                        }
                    }

                    cargarDatos();

                    let boton = document.getElementById(`button${item.id}`);


                    boton.addEventListener('click', async function (e) {
                        e.preventDefault();
                        id = item.id;
                        let nombre = document.getElementById(`nombre${item.id}`);
                        let newInfo = nombre.value;
                        let paramName = "nombre";
                        let paramName2 = "email";
                        let paramName3 = "tipoPersonaId"
                        let newInfo2 = document.getElementById(`email${item.id}`).value;
                        let newInfo3 = document.getElementById(`tipoPersona${item.id}`).value;




                        await editInfoAsync(url, id, paramName, newInfo);
                        await editInfoAsync(url, id, paramName2, newInfo2);
                        await editInfoAsync(url, id, paramName3, newInfo3);
                    });
                }
            });
        };

        renderData(data);

        document.getElementById('searchForm').addEventListener('submit', async (event) => {
            event.preventDefault();
            let searchValue = document.getElementById('searchInput').value;

            let searchData = await getInfoAsync(url, searchValue);

            container.innerHTML = /*html*/ `
            `;

            if ('nombre' in searchData) {
                let html = /*html*/ `
                <style>


                .scroll {
                    overflow-y: auto; 
                }

                @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');
               

                .container {
                    gap: 30px;
                    background: none;
                    flex-direction: column;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    padding: 20px;
                    width: 40vw;
                    }

                    .form{
                    flex-direction: column;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    gap:30px
                    }

                    .container h2{
                        font-size: 40px;
                        width: 100%;
                        display: flex;
                        justify-content: center;
                        color: white;
                }

                    .input-field input[type="text"]{
                        width: 15vw; 
                        height: 3vh; 
                    }
                    
                    .container .heading {
                        font-size: 1.3rem;
                        margin-bottom: 20px;
                        font-weight: bolder;
                    }
                    
                
                    .container .btn-container {
                        width: 100%;
                        height: 10vh;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        gap: 20px;
                    }
                    
                    .container .btn {
                        padding: 5px 20px;
                        font-size: 1rem;
                        text-transform: uppercase;
                        letter-spacing: 3px;
                        border-radius: 10px;
                        border: solid 1px #1034aa;
                        border-bottom: solid 1px #90c2ff;
                        background: linear-gradient(135deg, #0034de, #006eff);;
                        color: #fff;
                        font-weight: bolder;
                        width: 50%;
                        height: 5vh;
                        transition: all 0.2s ease;
                        box-shadow: 0px 2px 3px #000d3848, inset 0px 4px 5px #0070f0,
                            inset 0px -4px 5px #002cbb;
                    }
                    
                    .container .btn:active {
                        box-shadow: inset 0px 4px 5px #0070f0, inset 0px -4px 5px #002cbb;
                        transform: scale(0.995);
                    }
                    
                    .input-field {
                        display: flex;
                        justify-content: center;
                        position: relative;
                    }
                    
                    .input-field label {
                        position: absolute;
                        color: #000000;
                        pointer-events: none;
                        background-color: transparent;
                        left: 15px;
                        transform: translateY(0.6rem);
                        transition: all 0.3s ease;
                    }
                    
                    .input-field input {
                        padding: 10px 15px;
                        font-size: 1rem;
                        border-radius: 8px;
                        border: solid 1px #8d8d8d;
                        letter-spacing: 1px;
                        width: 100%;
                    }
                    
                    .input-field input:focus,
                    .input-field input:valid {
                        outline: none;
                        border: solid 1px #0034de;
                    }
                    
                    .input-field input:focus ~ label,
                    .input-field input:valid ~ label {
                        transform: translateY(-51%) translateX(-10px) scale(0.8);
                        background-color: #fff;
                        padding: 0px 5px;
                        color: #0034de;
                        font-weight: bold;
                        letter-spacing: 1px;
                        border: none;
                        border-radius: 100px;
                    }
                    
                    .container .passicon {
                        cursor: pointer;
                        font-size: 1.3rem;
                        position: absolute;
                        top: 6px;
                        right: 8px;
                    }
                    
                    .container .close {
                        display: none;
                    }
                    
                    .tipoPersonaId{
                        font-size: 1rem;
                    }

                    select{
                        border-radius: 10px;
                        width: 17vw;
                        height: 4vh; 
                    }

                    @media(max-width: 760px){

                        .container {
                            width: 90%;
                            height: 90vh;
                        }

                        .input-field input[type="text"],
                        .input-field select {
                            width: 90%;
                        }
                        
                        .container {
                            width: 90%;
                            height: 100%;
                        }

                        
                        .container .btn {
                            width: 50%;
                            height: 5vh;
                        }
                    }
                </style>

                <div class="container">
                    <form class="form">
                        <h2 class="formatoH2">Editar</h2>

                        <h2>Id:${searchData.id} </h2>

                        <div class="input-field">
                            <input
                            required=""
                            autocomplete="off"
                            type="text"
                            name="nombre"
                            id="nombre${searchData.nombre}"
                            class="nombre"
                            value="${searchData.nombre}"
                            />
                            <label for="nombre">Nombre:</label>
                        </div>
                        
                        <div class="input-field">
                            <input
                            required=""
                            autocomplete="off"
                            type="text"
                            name="email"
                            id="email${searchData.email}"
                            class="email"
                            value="${searchData.email}"
                            />
                            <label for="email">email</label>
                        </div>
        

                        <select for="${searchData.tipoPersonaId}"  class="tipoPersonaId" id="marcaId${searchData.tipoPersonaId}">
                            <option value="" > Tipo de persona: </option>
                            <option value="${searchData.tipoPersonaId}" >${searchData.tipoPersonaId}</option>
                        </select>

                    
                        <div class="btn-container">
                            <button class="btn" id="button${searchData.id}" type="button">enviar</button>
                        </div>
                    </form>
                </div>`;
                
                container.innerHTML += html;
                function crearOpciones(dicc) {
                    // Selecciona el elemento select
                    let selectElement = document.getElementById(`tipoPersona${searchData.id}`);

                    // Crea y aÃ±ade las nuevas opciones
                    for (let i = 0; i < dicc.length; i++) {
                        let option = document.createElement('option');
                        option.value = dicc[i].id;
                        option.text = dicc[i].id + ": " + dicc[i].nombre;
                        selectElement.add(option);
                    }
                }

                async function cargarDatos() {
                    try {
                        const data = await runAsync('http://localhost:3000/tipoPersonas');
                        crearOpciones(data);
                    } catch (error) {
                        console.log('Error al cargar datos:', error);
                    }
                }

                cargarDatos();


                let boton = document.getElementById(`button${searchData.id}`);



                boton.addEventListener('click', async function (e) {
                    e.preventDefault();
                    let nombre = document.getElementById(`nombre${searchData.id}`);
                    let newInfo = nombre.value;
                    id = searchData.id;
                    let paramName = "nombre";

                    let paramName2 = "email";
                    let paramName3 = "tipoPersonaId"
                    let newInfo2 = document.getElementById(`email${searchData.id}`).value;
                    let newInfo3 = document.getElementById(`tipoPersona${searchData.id}`).value;




                    await editInfoAsync(url, id, paramName, newInfo);
                    await editInfoAsync(url, id, paramName2, newInfo2);
                    await editInfoAsync(url, id, paramName3, newInfo3);
                });
            }
        });
    }
}

customElements.define("editar-persona", EditarPersona);
